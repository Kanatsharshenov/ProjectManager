@model ProjectManager.Models.Projects

@{
    ViewBag.Title = "Details";
}
@Scripts.Render("~/Scripts/jquery-2.2.0.js")
<script type="text/javascript">
    function gettoken() {
        var token = '@Html.AntiForgeryToken()';
        token = $(token).val();
        return token;
    }
    $("body").on("click", ".del_from_project", function (event) {
        var parentBlock = $(this).parent();
        event.preventDefault();
        var securityToken = $('[name=__RequestVerificationToken]').val();
        var id = $(this).attr("data");
        var serviceURL = '/Executors/DeleteConfirmed';
        $.ajax({
            type: "POST",
            url: serviceURL,
            data: {id: id, __RequestVerificationToken : securityToken},
            contentType: "application/x-www-form-urlencoded",
            dataType: "json",
            success: successFunc,
            error: errorFunc
        });

        function successFunc(data, status) {
            parentBlock.fadeOut("slow");
            $(".add_to_project").fadeIn("slow");
        }

        function errorFunc() {
            alert('error');
        }

    });

    $("body").on("click", ".add_to_project", function (event) {
        var parentBlock = $(this).parent();
        event.preventDefault();        
        var projectId = $("#ProjectID").val();
        var securityToken = $('[name=__RequestVerificationToken]').val();
        $.ajax({
            type: 'GET',
            data: { projectId: projectId },
            url: '/Projects/GetItems',
            success: function (data) {
                $('.dropdown').html(data).fadeIn("slow");
            },
            error: function (data) {
                alert("Error");
            }
        });

        $(".add_to_project").fadeOut("slow");
    });

    $("body").on("click", ".add", function (event) {
        var parentBlock = $(this).parent();
        event.preventDefault();
            $.ajax({
                type: "POST",
                url: "/Executors/Create",
                data: { 'UserID': $("#selected-user").val(), 'ProjectID': $("#ProjectID").val(), '__RequestVerificationToken': $('[name=__RequestVerificationToken]').val() },
                contentType: "application/x-www-form-urlencoded",
                dataType: "json",
                success: successFunc,
                error: errorFunc
            });

        function successFunc(data, status) {
            $(".add_to_project").fadeIn("slow");
            
            var FullName = $("#dropdown option:selected").text();
            var id = $("#dropdown option:selected").val();
            $("#dropdown").html('');
            $(".add").fadeOut("slow");
            
            $('.executors-table').append('<tr><td><input id=' + "id_executor" + 'name=' + "id_executor" + ' type= ' + "hidden " + 'value= ' + id + '/>' +
                                '<a href= ' + "/Users/Details/" + id + ' >' + FullName + '</a> ' +
                                '<a class= ' + "del_from_project " + 'style = "color:red" data=' + data.id + ' href=' + "/Projects/Details/" + id + ' >Удалить из проекта</a> ' +
                            '</td>'
    );
        }

        function errorFunc(errorData) {
            alert('Ошибка' + errorData.responseText);
        }
    });

</script>


@Html.AntiForgeryToken()
<div>
    
    <hr />
    <dl class="dl-horizontal">
        <dt>
            Проект:
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>

        <dt>
            Заказчик:
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Customer)
        </dd>

        <dt>
            Исполниель:
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Executor)
        </dd>

        <dt>
            Дата начала:
        </dt>

        <dd>
            @Html.DisplayFor(model => model.BeginDate)
        </dd>

        <dt>
            Дата окончания:
        </dt>

        <dd>
            @Html.DisplayFor(model => model.EndDate)
        </dd>

        <dt>
            Приоритет:
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Priority)
        </dd>

        <dt>
            Описание:
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Text)
        </dd>

        <dt>
            Руководитель:
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Users.FullName)
        </dd>
        <dd>
            <table class="executors-table">
                @foreach (var item in Model.Executors)
                {
                    <tr>
                        <td>
                            @Html.Hidden("id_executor", item.ExecutorID)
                            @Html.RouteLink(item.Users.FirstName + " " + item.Users.LastName, new { controller = "Users", action = "Details", id = item.Users.UserID })
                            @Html.RouteLink("Удалить из проекта", null, null, new { @class = "del_from_project", @data = item.ExecutorID, @style = "color:red" })                            
                        </td>
                    </tr>
                }
            </table>
        </dd>
        <dd>
            <div class="dropdown">
                
            </div>
        </dd>        
</dl>
</div>
@Html.Hidden("ProjectID", Model.ProjectID)

@Html.ActionLink("Добавить сотрудника", null, null, new { @class = "add_to_project" })
<p>
    @Html.ActionLink("Редактировать", "Edit", new { id = Model.ProjectID }) |
    @Html.ActionLink("Назад", "Index")
</p>


